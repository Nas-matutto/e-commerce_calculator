---
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'E-commerce Launch Cost Estimator - Budget Calculator',
  description: 'Calculate estimated costs for launching your e-commerce brand. Get cost breakdowns for product sourcing, inventory, marketing, and total launch costs.',
  keywords: 'e-commerce launch cost, startup cost calculator, business launch budget, e-commerce cost estimator',
  canonical: 'https://www.sellingwithnas.com/tools/launch-cost-estimator',
};
---

<Layout metadata={metadata}>
  <!-- Calculator Content -->
  <div class="calculator-page" style="background: linear-gradient(135deg, #f0f9ff 0%, #e0f2fe 50%, #bae6fd 100%); min-height: 100vh; color: #0f172a; overflow-x: hidden; padding-top: 40px; font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif; transition: all 0.3s ease;">
    <div class="floating-elements" style="position: fixed; top: 0; left: 0; width: 100%; height: 100%; pointer-events: none; z-index: -1;">
      <div class="floating-circle" style="position: absolute; border-radius: 50%; background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1)); animation: float 6s ease-in-out infinite; width: 80px; height: 80px; top: 20%; left: 10%; animation-delay: 0s;"></div>
      <div class="floating-circle" style="position: absolute; border-radius: 50%; background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1)); animation: float 6s ease-in-out infinite; width: 120px; height: 120px; top: 60%; right: 15%; animation-delay: 2s;"></div>
      <div class="floating-circle" style="position: absolute; border-radius: 50%; background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1)); animation: float 6s ease-in-out infinite; width: 60px; height: 60px; bottom: 20%; left: 20%; animation-delay: 4s;"></div>
    </div>

    <div class="container" style="max-width: 1000px; margin: 0 auto; padding: 20px;">
      <div class="header" style="text-align: center; margin-bottom: 40px; position: relative;">
        <h1 style="font-size: 3rem; font-weight: 700; background: linear-gradient(45deg, #3b82f6, #8b5cf6, #ef4444); background-size: 200% 200%; -webkit-background-clip: text; -webkit-text-fill-color: transparent; background-clip: text; animation: gradientShift 3s ease-in-out infinite; text-shadow: 0 0 30px rgba(59, 130, 246, 0.3); margin: 0;">E-commerce Brand Launch Cost Estimator</h1>
        <p style="font-size: 1.2rem; color: #475569; margin-top: 10px;">Calculate estimated costs for launching your e-commerce brand</p>
      </div>

      <div class="calculator-sections" style="display: flex; flex-direction: column; gap: 30px;">
        <!-- INPUT SECTION -->
        <div class="input-section" style="background: rgba(255, 255, 255, 0.9); border-radius: 20px; padding: 40px; backdrop-filter: blur(10px); border: 1px solid rgba(59, 130, 246, 0.2); box-shadow: 0 20px 40px rgba(59, 130, 246, 0.1); transition: all 0.3s ease;">
          <h2 class="section-title" style="font-size: 1.8rem; margin-bottom: 25px; color: #3b82f6; text-align: center; position: relative; font-weight: 600;">Product Information</h2>
          
          <div class="input-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 25px; align-items: end;">
            <div class="input-group">
              <label for="productType" style="display: block; margin-bottom: 8px; font-weight: 600; color: #0f172a; font-size: 0.95rem;">Product Category</label>
              <select id="productType" style="width: 100%; padding: 15px 20px; border: 2px solid rgba(59, 130, 246, 0.2); border-radius: 12px; background: rgba(255, 255, 255, 0.7); color: #0f172a; font-size: 1rem; transition: all 0.3s ease; backdrop-filter: blur(5px);">
                <option value="">Select a category</option>
                <option value="electronics">Electronics & Tech</option>
                <option value="fashion">Fashion & Apparel</option>
                <option value="beauty">Beauty & Skincare</option>
                <option value="fitness">Fitness & Sports</option>
                <option value="home">Home & Garden</option>
                <option value="jewelry">Jewelry & Accessories</option>
                <option value="books">Books & Media</option>
                <option value="toys">Toys & Games</option>
                <option value="food">Food & Beverages</option>
                <option value="other">Other</option>
              </select>
            </div>

            <div class="input-group">
              <label for="targetPrice" style="display: block; margin-bottom: 8px; font-weight: 600; color: #0f172a; font-size: 0.95rem;">Target Product Price ($)</label>
              <input type="number" id="targetPrice" placeholder="e.g., 29" min="5" max="500" style="width: 100%; padding: 15px 20px; border: 2px solid rgba(59, 130, 246, 0.2); border-radius: 12px; background: rgba(255, 255, 255, 0.7); color: #0f172a; font-size: 1rem; transition: all 0.3s ease; backdrop-filter: blur(5px);">
            </div>

            <div class="input-group">
              <label for="businessScale" style="display: block; margin-bottom: 8px; font-weight: 600; color: #0f172a; font-size: 0.95rem;">Launch Strategy</label>
              <select id="businessScale" style="width: 100%; padding: 15px 20px; border: 2px solid rgba(59, 130, 246, 0.2); border-radius: 12px; background: rgba(255, 255, 255, 0.7); color: #0f172a; font-size: 1rem; transition: all 0.3s ease; backdrop-filter: blur(5px);">
                <option value="small">Conservative Start ($3K-8K)</option>
                <option value="medium">Balanced Growth ($5K-15K)</option>
                <option value="large">Aggressive Launch ($8K-25K)</option>
              </select>
            </div>

            <button class="calculate-btn" id="analyze-button" style="grid-column: 1 / -1; padding: 18px 30px; background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%); color: white; border: none; border-radius: 12px; font-size: 1.1rem; font-weight: 600; cursor: pointer; transition: all 0.3s ease; margin-top: 20px; max-width: 300px; justify-self: center;">
              Calculate Launch Costs
            </button>
          </div>

          <div class="loading" id="loading" style="display: none; text-align: center; color: #3b82f6; margin-top: 20px;">
            <div class="spinner" style="border: 3px solid #f3f3f3; border-top: 3px solid #3b82f6; border-radius: 50%; width: 30px; height: 30px; animation: spin 1s linear infinite; margin: 0 auto 10px;"></div>
            <p>Calculating your launch costs...</p>
          </div>

          <div class="error" id="error" style="background: rgba(254, 242, 242, 0.9); color: #dc2626; padding: 15px; border-radius: 8px; margin-top: 20px; display: none; border: 1px solid #fca5a5;">
            <p id="errorMessage"></p>
          </div>
        </div>

        <!-- RESULTS SECTION -->
        <div class="results-section" style="background: rgba(255, 255, 255, 0.9); border-radius: 20px; padding: 40px; backdrop-filter: blur(10px); border: 1px solid rgba(59, 130, 246, 0.2); box-shadow: 0 20px 40px rgba(59, 130, 246, 0.1); transition: all 0.3s ease;">
          <h2 class="section-title" style="font-size: 1.8rem; margin-bottom: 25px; color: #3b82f6; text-align: center; position: relative; font-weight: 600;">Launch Cost Analysis</h2>
          
          <div class="results" id="results" style="display: none;">
            <div class="summary-grid" id="summaryGrid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(160px, 1fr)); gap: 20px; margin-bottom: 30px;">
              <!-- Summary stats will be populated here -->
            </div>
            
            <div class="cost-breakdown" style="background: rgba(255, 255, 255, 0.6); border-radius: 16px; padding: 30px; margin-bottom: 30px; border: 1px solid rgba(59, 130, 246, 0.1); box-shadow: 0 4px 15px rgba(59, 130, 246, 0.08);">
              <h3 style="margin-bottom: 25px; color: #3b82f6; font-size: 1.3rem; text-align: center; font-weight: 600;">Cost Breakdown</h3>
              <div id="costTableContainer">
                <!-- Cost table will be populated here -->
              </div>
            </div>
            
            <div id="totalSection">
              <!-- Total investment will be populated here -->
            </div>
            
            <div class="considerations" style="background: rgba(254, 243, 199, 0.8); border: 1px solid #f59e0b; border-radius: 12px; padding: 25px;">
              <h3 style="color: #92400e; margin-bottom: 18px; font-size: 1.25rem; font-weight: 600;">Key Considerations</h3>
              <div id="considerationsContent">
                <!-- Considerations will be populated here -->
              </div>
            </div>
          </div>
          
          <div class="placeholder" id="placeholder" style="text-align: center; color: #6c757d; margin-top: 30px;">
            <div class="placeholder-icon" style="font-size: 3rem; margin-bottom: 16px;">üìä</div>
            <h3 style="font-size: 1.5rem; font-weight: 600; color: #374151; margin-bottom: 8px;">Ready to Calculate</h3>
            <p style="font-size: 1rem; line-height: 1.6;">Enter your product details above to see detailed cost estimates for launching your e-commerce brand</p>
          </div>
        </div>
      </div>

      <!-- Back to home button -->
      <div style="text-align: center; margin: 40px 0;">
        <a href="/" style="display: inline-block; padding: 12px 24px; border-radius: 12px; text-decoration: none; font-weight: 600; text-align: center; transition: all 0.3s ease; backdrop-filter: blur(10px); background: transparent; color: #3b82f6; border: 2px solid #3b82f6;">‚Üê Back to Home</a>
      </div>
    </div>
  </div>

  <script type="application/ld+json">
{
  "@context": "https://schema.org",
  "@type": "WebApplication",
  "name": "E-commerce Launch Cost Calculator",
  "description": "Free calculator to determine e-commerce launch costs, budget planning, and investment requirements for new brands",
  "url": "https://www.sellingwithnas.com/tools/launch-cost-estimator",
  "applicationCategory": "BusinessApplication",
  "operatingSystem": "Web Browser",
  "offers": {
    "@type": "Offer",
    "price": "0",
    "priceCurrency": "USD"
  },
  "creator": {
    "@type": "Person",
    "name": "Nas",
    "url": "https://www.sellingwithnas.com"
  },
  "featureList": [
    "Calculate total launch costs",
    "Product category-specific estimates",
    "Marketing budget planning",
    "Break-even analysis",
    "Investment requirement planning"
  ]
}
</script>

</Layout>

<style>
  @keyframes gradientShift {
    0%, 100% { background-position: 0% 50%; }
    50% { background-position: 100% 50%; }
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  @keyframes float {
    0%, 100% { transform: translateY(0px) rotate(0deg); }
    50% { transform: translateY(-20px) rotate(180deg); }
  }

  @keyframes shimmer {
    0%, 100% { transform: rotate(0deg); }
    50% { transform: rotate(180deg); }
  }

  .floating-circle {
    animation: float 6s ease-in-out infinite;
  }

  .calculate-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 30px rgba(59, 130, 246, 0.3);
  }

  .input-section:hover, .results-section:hover {
    transform: translateY(-5px);
    box-shadow: 0 25px 50px rgba(59, 130, 246, 0.15);
  }

  .loading.show {
    display: block !important;
  }

  .results.show {
    display: block !important;
  }

  .placeholder.hide {
    display: none !important;
  }

  .error.show {
    display: block !important;
  }

  .section-title::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(90deg, #3b82f6, #8b5cf6);
    border-radius: 2px;
  }

  @media (max-width: 768px) {
    .input-grid {
      grid-template-columns: 1fr !important;
      gap: 20px !important;
    }
    
    .header h1 {
      font-size: 2.2rem !important;
    }
    
    .container {
      padding: 15px !important;
    }
    
    .input-section, .results-section {
      padding: 25px !important;
    }
  }

  @media (max-width: 480px) {
    .summary-grid {
      grid-template-columns: repeat(2, 1fr) !important;
    }
  }

  /* Dark mode styles using your existing pattern */
  :global(.dark) .calculator-page {
    background: linear-gradient(135deg, #0f0f23 0%, #1a1a2e 50%, #16213e 100%) !important;
    color: #ffffff !important;
  }

  :global(.dark) .floating-circle {
    background: linear-gradient(45deg, rgba(0, 212, 255, 0.1), rgba(88, 101, 242, 0.1)) !important;
  }

  :global(.dark) .header h1 {
    background: linear-gradient(45deg, #00d4ff, #5865f2, #ff6b6b) !important;
    -webkit-background-clip: text !important;
    -webkit-text-fill-color: transparent !important;
    text-shadow: 0 0 30px rgba(0, 212, 255, 0.3) !important;
  }

  :global(.dark) .header p {
    color: #a0a0a0 !important;
  }

  :global(.dark) .input-section,
  :global(.dark) .results-section {
    background: rgba(255, 255, 255, 0.05) !important;
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
    box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2) !important;
  }

  :global(.dark) .section-title {
    color: #00d4ff !important;
  }

  :global(.dark) .section-title::after {
    background: linear-gradient(90deg, #00d4ff, #5865f2) !important;
  }

  :global(.dark) .input-group label {
    color: #e0e0e0 !important;
  }

  :global(.dark) .input-group input,
  :global(.dark) .input-group select {
    background: rgba(255, 255, 255, 0.05) !important;
    border: 2px solid rgba(255, 255, 255, 0.1) !important;
    color: #ffffff !important;
  }

  :global(.dark) .input-group input:focus,
  :global(.dark) .input-group select:focus {
    border-color: #00d4ff !important;
    box-shadow: 0 0 20px rgba(0, 212, 255, 0.2) !important;
    background: rgba(255, 255, 255, 0.08) !important;
  }

  :global(.dark) .calculate-btn {
    background: linear-gradient(135deg, #00d4ff 0%, #5865f2 100%) !important;
  }

  :global(.dark) .calculate-btn:hover {
    box-shadow: 0 10px 30px rgba(0, 212, 255, 0.3) !important;
  }

  :global(.dark) .placeholder {
    color: #a0a0a0 !important;
  }

  :global(.dark) .placeholder h3 {
    color: #ffffff !important;
  }

  :global(.dark) .summary-card {
    background: rgba(255, 255, 255, 0.03) !important;
    border: 1px solid rgba(255, 255, 255, 0.05) !important;
  }

  :global(.dark) .summary-value {
    color: #00d4ff !important;
  }

  :global(.dark) .summary-label {
    color: #a0a0a0 !important;
  }

  :global(.dark) .cost-breakdown {
    background: rgba(255, 255, 255, 0.03) !important;
    border: 1px solid rgba(255, 255, 255, 0.05) !important;
  }

  :global(.dark) .cost-breakdown h3 {
    color: #00d4ff !important;
  }

  :global(.dark) .cost-table {
    background: rgba(255, 255, 255, 0.02) !important;
    border: 1px solid rgba(255, 255, 255, 0.1) !important;
  }

  :global(.dark) .cost-table-header {
    background: linear-gradient(135deg, rgba(0, 212, 255, 0.1), rgba(88, 101, 242, 0.1)) !important;
    color: #00d4ff !important;
  }

  :global(.dark) .cost-table-row {
    background: rgba(255, 255, 255, 0.02) !important;
  }

  :global(.dark) .cost-table-row:hover {
    background: rgba(0, 212, 255, 0.05) !important;
  }

  :global(.dark) .cost-table-cell {
    background: rgba(255, 255, 255, 0.02) !important;
    border-bottom: 1px solid rgba(255, 255, 255, 0.05) !important;
  }

  :global(.dark) .cost-category {
    color: #ffffff !important;
  }

  :global(.dark) .cost-description {
    color: #a0a0a0 !important;
  }

  :global(.dark) .cost-range {
    color: #00d4ff !important;
  }

  :global(.dark) .total-investment-banner {
    background: linear-gradient(135deg, #00d4ff 0%, #5865f2 100%) !important;
  }

  :global(.dark) .considerations {
    background: rgba(0, 212, 255, 0.1) !important;
    border: 1px solid rgba(0, 212, 255, 0.3) !important;
  }

  :global(.dark) .considerations h3,
  :global(.dark) .considerations li {
    color: #00d4ff !important;
  }
</style>

<script>
  console.log('üöÄ Launch cost estimator script starting...');

  // Cost calculation logic - REALISTIC industry data
  const costData = {
    electronics: {
      sourcing: [800, 2500],
      inventory: [2000, 8000],
      shipping: [300, 800],
      platform: [500, 1500],
      marketing: [1500, 5000],
      legal: [200, 800],
      working: [1000, 3000],
      considerations: [
        "Electronics need safety certifications ($200-800)",
        "Higher import duties (15-25%) from overseas",
        "Plan for 15-20% return rate",
        "Competition requires strong advertising budget"
      ]
    },
    fashion: {
      sourcing: [400, 1500],
      inventory: [1500, 6000],
      shipping: [200, 600],
      platform: [300, 1200],
      marketing: [1000, 4000],
      legal: [150, 500],
      working: [800, 2500],
      considerations: [
        "Fashion has 25-35% return rates",
        "Seasonal inventory planning critical",
        "Instagram/TikTok marketing essential",
        "Size guides reduce returns significantly"
      ]
    },
    beauty: {
      sourcing: [600, 2000],
      inventory: [1800, 7000],
      shipping: [250, 700],
      platform: [400, 1300],
      marketing: [2000, 6000],
      legal: [300, 1000],
      working: [900, 2800],
      considerations: [
        "FDA compliance required for skincare",
        "Influencer marketing drives 60% of sales",
        "Before/after content converts best",
        "Expiration dates affect inventory management"
      ]
    },
    fitness: {
      sourcing: [500, 1800],
      inventory: [1600, 5500],
      shipping: [250, 650],
      platform: [350, 1100],
      marketing: [1200, 4200],
      legal: [150, 600],
      working: [750, 2400],
      considerations: [
        "New Year demand spike (3x normal)",
        "Video demonstrations boost sales 40%",
        "Fitness influencer partnerships work well",
        "Equipment weight affects shipping costs"
      ]
    },
    home: {
      sourcing: [700, 2200],
      inventory: [2000, 7500],
      shipping: [400, 1000],
      platform: [400, 1200],
      marketing: [1000, 3500],
      legal: [200, 700],
      working: [800, 2600],
      considerations: [
        "Room staging photos increase sales 25%",
        "Seasonal trends affect demand",
        "Larger items = higher shipping costs",
        "Home improvement seasons boost sales"
      ]
    },
    jewelry: {
      sourcing: [800, 3000],
      inventory: [2500, 10000],
      shipping: [150, 400],
      platform: [500, 1500],
      marketing: [1800, 5500],
      legal: [300, 1200],
      working: [1200, 4000],
      considerations: [
        "High-value shipping insurance required",
        "Professional photography essential",
        "Holiday seasons drive 40% of sales",
        "Authentication builds customer trust"
      ]
    },
    books: {
      sourcing: [300, 1000],
      inventory: [800, 3000],
      shipping: [150, 400],
      platform: [250, 800],
      marketing: [600, 2000],
      legal: [100, 400],
      working: [400, 1200],
      considerations: [
        "Print-on-demand reduces inventory risk",
        "Amazon dominates - differentiation key",
        "Educational content marketing works",
        "Low margins require volume sales"
      ]
    },
    toys: {
      sourcing: [600, 2000],
      inventory: [1500, 6000],
      shipping: [250, 700],
      platform: [350, 1000],
      marketing: [1200, 4000],
      legal: [200, 800],
      working: [700, 2300],
      considerations: [
        "Safety testing required for children's toys",
        "Holiday season drives 50% of sales",
        "Parent review content crucial",
        "Age-appropriate marketing regulations"
      ]
    },
    food: {
      sourcing: [800, 2500],
      inventory: [1200, 4500],
      shipping: [300, 800],
      platform: [400, 1200],
      marketing: [1500, 4500],
      legal: [400, 1500],
      working: [900, 2800],
      considerations: [
        "FDA regulations and nutritional labeling",
        "Expiration dates limit inventory time",
        "Cold chain shipping increases costs",
        "Subscription model reduces acquisition cost"
      ]
    }
  };

  // Default costs for other categories
  const defaultCosts = {
    sourcing: [500, 1800],
    inventory: [1500, 5500],
    shipping: [250, 650],
    platform: [350, 1100],
    marketing: [1000, 3500],
    legal: [150, 600],
    working: [700, 2200],
    considerations: [
      "Research your category's specific regulations",
      "Start small and scale based on demand",
      "Customer service quality drives repeat sales",
      "Plan for seasonal demand changes"
    ]
  };

  // Dark mode detection for dynamic content
  function isDarkMode() {
    return document.documentElement.classList.contains('dark') || 
           document.body.classList.contains('dark');
  }

  function initializeCalculator() {
    console.log('üéØ DOM loaded, setting up event listener');
    
    const analyzeBtn = document.getElementById('analyze-button');
    console.log('Button found:', !!analyzeBtn);
    
    if (analyzeBtn) {
      analyzeBtn.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('üéâ Button clicked!');
        calculateCosts();
      });
    } else {
      console.error('‚ùå Analyze button not found');
    }
  }

  function calculateCosts() {
    console.log('üìä Calculate costs function called');
    
    const productType = document.getElementById('productType').value;
    const targetPrice = parseInt(document.getElementById('targetPrice').value) || 29;
    const businessScale = document.getElementById('businessScale').value;

    console.log('Form values:', { productType, targetPrice, businessScale });

    if (!productType) {
      showError('Please select a product category');
      return;
    }

    // Show loading
    showLoading();
    hideError();

    // Simulate calculation delay
    setTimeout(() => {
      const costs = costData[productType] || defaultCosts;
      
      // Adjust costs based on business scale
      const scaleMultiplier = businessScale === 'small' ? 0.7 : businessScale === 'large' ? 1.3 : 1;
      
      // Adjust costs based on target price
      const priceMultiplier = targetPrice < 25 ? 0.8 : targetPrice > 100 ? 1.2 : 1;
      
      const finalMultiplier = scaleMultiplier * priceMultiplier;

      const finalCosts = {
        sourcing: [Math.round(costs.sourcing[0] * finalMultiplier), Math.round(costs.sourcing[1] * finalMultiplier)],
        inventory: [Math.round(costs.inventory[0] * finalMultiplier), Math.round(costs.inventory[1] * finalMultiplier)],
        shipping: [Math.round(costs.shipping[0] * finalMultiplier), Math.round(costs.shipping[1] * finalMultiplier)],
        platform: [Math.round(costs.platform[0] * finalMultiplier), Math.round(costs.platform[1] * finalMultiplier)],
        marketing: [Math.round(costs.marketing[0] * finalMultiplier), Math.round(costs.marketing[1] * finalMultiplier)],
        legal: [Math.round(costs.legal[0] * finalMultiplier), Math.round(costs.legal[1] * finalMultiplier)],
        working: [Math.round(costs.working[0] * finalMultiplier), Math.round(costs.working[1] * finalMultiplier)]
      };

      displayResults(finalCosts, costs.considerations, productType, targetPrice, businessScale);
      hideLoading();
      showResults();
    }, 2000);
  }

  function displayResults(costs, considerations, productType, targetPrice, businessScale) {
    console.log('üé® Displaying results');
    
    // Hide placeholder
    const placeholder = document.getElementById('placeholder');
    if (placeholder) placeholder.classList.add('hide');

    // Calculate total
    const totalMin = costs.sourcing[0] + costs.inventory[0] + costs.shipping[0] + costs.platform[0] + costs.marketing[0] + costs.legal[0] + costs.working[0];
    const totalMax = costs.sourcing[1] + costs.inventory[1] + costs.shipping[1] + costs.platform[1] + costs.marketing[1] + costs.legal[1] + costs.working[1];

    // Create summary cards with inline styles (CSS handles dark mode)
    const summaryHTML = `
      <div style="background: rgba(255, 255, 255, 0.6); padding: 25px 20px; border-radius: 12px; text-align: center; border: 1px solid rgba(59, 130, 246, 0.1); transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(59, 130, 246, 0.1);" class="summary-card">
        <div style="font-size: 1.8rem; font-weight: 700; color: #3b82f6; margin-bottom: 5px; line-height: 1.2;" class="summary-value">${totalMin.toLocaleString()}</div>
        <div style="font-size: 0.85rem; color: #6c757d; font-weight: 500; text-transform: uppercase; letter-spacing: 0.5px; line-height: 1.3;" class="summary-label">Minimum Budget</div>
      </div>
      <div style="background: rgba(255, 255, 255, 0.6); padding: 25px 20px; border-radius: 12px; text-align: center; border: 1px solid rgba(59, 130, 246, 0.1); transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(59, 130, 246, 0.1);" class="summary-card">
        <div style="font-size: 1.8rem; font-weight: 700; color: #3b82f6; margin-bottom: 5px; line-height: 1.2;" class="summary-value">${totalMax.toLocaleString()}</div>
        <div style="font-size: 0.85rem; color: #6c757d; font-weight: 500; text-transform: uppercase; letter-spacing: 0.5px; line-height: 1.3;" class="summary-label">Recommended Budget</div>
      </div>
      <div style="background: rgba(255, 255, 255, 0.6); padding: 25px 20px; border-radius: 12px; text-align: center; border: 1px solid rgba(59, 130, 246, 0.1); transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(59, 130, 246, 0.1);" class="summary-card">
        <div style="font-size: 1.8rem; font-weight: 700; color: #3b82f6; margin-bottom: 5px; line-height: 1.2;" class="summary-value">${Math.round((costs.marketing[0] + costs.marketing[1]) / 2 / ((totalMin + totalMax) / 2) * 100)}%</div>
        <div style="font-size: 0.85rem; color: #6c757d; font-weight: 500; text-transform: uppercase; letter-spacing: 0.5px; line-height: 1.3;" class="summary-label">Marketing %</div>
      </div>
      <div style="background: rgba(255, 255, 255, 0.6); padding: 25px 20px; border-radius: 12px; text-align: center; border: 1px solid rgba(59, 130, 246, 0.1); transition: all 0.3s ease; box-shadow: 0 4px 15px rgba(59, 130, 246, 0.1);" class="summary-card">
        <div style="font-size: 1.8rem; font-weight: 700; color: #3b82f6; margin-bottom: 5px; line-height: 1.2;" class="summary-value">${Math.round(((totalMin + totalMax) / 2) / targetPrice)}</div>
        <div style="font-size: 0.85rem; color: #6c757d; font-weight: 500; text-transform: uppercase; letter-spacing: 0.5px; line-height: 1.3;" class="summary-label">Break Even Units</div>
      </div>
    `;

    const summaryGrid = document.getElementById('summaryGrid');
    if (summaryGrid) summaryGrid.innerHTML = summaryHTML;

    // Create cost breakdown table with classes for CSS styling
    const costTableHTML = `
      <table style="width: 100%; border-collapse: collapse; border-radius: 8px; overflow: hidden; border: 1px solid rgba(59, 130, 246, 0.2); background: white;" class="cost-table">
        <thead>
          <tr>
            <th style="background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1)); padding: 18px; text-align: left; font-weight: 600; color: #3b82f6; font-size: 0.95rem; border-bottom: 1px solid rgba(59, 130, 246, 0.2);" class="cost-table-header">Cost Category</th>
            <th style="background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1)); padding: 18px; text-align: right; font-weight: 600; color: #3b82f6; font-size: 0.95rem; border-bottom: 1px solid rgba(59, 130, 246, 0.2);" class="cost-table-header">Estimated Range</th>
          </tr>
        </thead>
        <tbody>
          <tr style="background: white;" class="cost-table-row">
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem;" class="cost-table-cell">
              <div style="font-weight: 600; color: #0f172a; margin-bottom: 2px; font-size: 1rem;" class="cost-category">Product Development & Sourcing</div>
              <div style="font-size: 0.85rem; color: #6c757d; line-height: 1.4;" class="cost-description">Initial product development, supplier negotiations, samples</div>
            </td>
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem; text-align: right; font-weight: 600; color: #3b82f6; font-size: 1rem;" class="cost-range">${costs.sourcing[0].toLocaleString()} - ${costs.sourcing[1].toLocaleString()}</td>
          </tr>
          <tr style="background: white;" class="cost-table-row">
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem;" class="cost-table-cell">
              <div style="font-weight: 600; color: #0f172a; margin-bottom: 2px; font-size: 1rem;" class="cost-category">Initial Inventory</div>
              <div style="font-size: 0.85rem; color: #6c757d; line-height: 1.4;" class="cost-description">First production run, minimum order quantities</div>
            </td>
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem; text-align: right; font-weight: 600; color: #3b82f6; font-size: 1rem;" class="cost-range">${costs.inventory[0].toLocaleString()} - ${costs.inventory[1].toLocaleString()}</td>
          </tr>
          <tr style="background: white;" class="cost-table-row">
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem;" class="cost-table-cell">
              <div style="font-weight: 600; color: #0f172a; margin-bottom: 2px; font-size: 1rem;" class="cost-category">Shipping & Import Duties</div>
              <div style="font-size: 0.85rem; color: #6c757d; line-height: 1.4;" class="cost-description">International shipping, customs, warehousing</div>
            </td>
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem; text-align: right; font-weight: 600; color: #3b82f6; font-size: 1rem;" class="cost-range">${costs.shipping[0].toLocaleString()} - ${costs.shipping[1].toLocaleString()}</td>
          </tr>
          <tr style="background: white;" class="cost-table-row">
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem;" class="cost-table-cell">
              <div style="font-weight: 600; color: #0f172a; margin-bottom: 2px; font-size: 1rem;" class="cost-category">Website & Platform Setup</div>
              <div style="font-size: 0.85rem; color: #6c757d; line-height: 1.4;" class="cost-description">E-commerce platform, design, payment processing</div>
            </td>
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem; text-align: right; font-weight: 600; color: #3b82f6; font-size: 1rem;" class="cost-range">${costs.platform[0].toLocaleString()} - ${costs.platform[1].toLocaleString()}</td>
          </tr>
          <tr style="background: white;" class="cost-table-row">
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem;" class="cost-table-cell">
              <div style="font-weight: 600; color: #0f172a; margin-bottom: 2px; font-size: 1rem;" class="cost-category">Marketing & Advertising</div>
              <div style="font-size: 0.85rem; color: #6c757d; line-height: 1.4;" class="cost-description">Paid ads, content creation, influencer partnerships</div>
            </td>
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem; text-align: right; font-weight: 600; color: #3b82f6; font-size: 1rem;" class="cost-range">${costs.marketing[0].toLocaleString()} - ${costs.marketing[1].toLocaleString()}</td>
          </tr>
          <tr style="background: white;" class="cost-table-row">
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem;" class="cost-table-cell">
              <div style="font-weight: 600; color: #0f172a; margin-bottom: 2px; font-size: 1rem;" class="cost-category">Legal & Compliance</div>
              <div style="font-size: 0.85rem; color: #6c757d; line-height: 1.4;" class="cost-description">Business registration, trademarks, insurance</div>
            </td>
            <td style="padding: 18px; border-bottom: 1px solid rgba(59, 130, 246, 0.1); font-size: 0.95rem; text-align: right; font-weight: 600; color: #3b82f6; font-size: 1rem;" class="cost-range">${costs.legal[0].toLocaleString()} - ${costs.legal[1].toLocaleString()}</td>
          </tr>
          <tr style="background: white;" class="cost-table-row">
            <td style="padding: 18px; font-size: 0.95rem;" class="cost-table-cell">
              <div style="font-weight: 600; color: #0f172a; margin-bottom: 2px; font-size: 1rem;" class="cost-category">Working Capital</div>
              <div style="font-size: 0.85rem; color: #6c757d; line-height: 1.4;" class="cost-description">Cash buffer for operations, unexpected costs</div>
            </td>
            <td style="padding: 18px; font-size: 0.95rem; text-align: right; font-weight: 600; color: #3b82f6; font-size: 1rem;" class="cost-range">${costs.working[0].toLocaleString()} - ${costs.working[1].toLocaleString()}</td>
          </tr>
        </tbody>
      </table>
    `;

    const costTableContainer = document.getElementById('costTableContainer');
    if (costTableContainer) costTableContainer.innerHTML = costTableHTML;

    // Create total section with class for CSS styling
    const totalHTML = `
      <div style="background: linear-gradient(135deg, #3b82f6 0%, #8b5cf6 100%); color: white; border-radius: 16px; padding: 40px; text-align: center; box-shadow: 0 15px 35px rgba(59, 130, 246, 0.3); margin-bottom: 30px; position: relative; overflow: hidden;" class="total-investment-banner">
        <div style="font-size: 1.2rem; font-weight: 600; margin-bottom: 15px; opacity: 0.9; letter-spacing: 0.5px; text-transform: uppercase; position: relative; z-index: 1;">Total Launch Investment</div>
        <div style="font-size: 2.6rem; font-weight: 900; margin-bottom: 10px; text-shadow: 0 2px 4px rgba(0,0,0,0.1); line-height: 1; position: relative; z-index: 1;">${totalMin.toLocaleString()} - ${totalMax.toLocaleString()}</div>
        <div style="font-size: 1.1rem; opacity: 0.8; font-weight: 400; position: relative; z-index: 1;">Complete budget for ${businessScale} scale launch</div>
      </div>
    `;

    const totalSection = document.getElementById('totalSection');
    if (totalSection) totalSection.innerHTML = totalHTML;

    // Display considerations with class for CSS styling
    let considerationsHTML = `<ul style="list-style: none; margin: 0; padding: 0;">`;
    considerations.forEach(consideration => {
      considerationsHTML += `<li style="position: relative; padding-left: 28px; margin-bottom: 12px; color: #92400e; font-size: 0.95rem; line-height: 1.5;"><span style="position: absolute; left: 0; top: 0;">‚ö†Ô∏è</span>${consideration}</li>`;
    });
    considerationsHTML += '</ul>';
    
    const considerationsContainer = document.getElementById('considerationsContent');
    if (considerationsContainer) considerationsContainer.innerHTML = considerationsHTML;
  }

  function showLoading() {
    const loading = document.getElementById('loading');
    if (loading) loading.classList.add('show');
  }

  function hideLoading() {
    const loading = document.getElementById('loading');
    if (loading) loading.classList.remove('show');
  }

  function showResults() {
    const results = document.getElementById('results');
    if (results) results.classList.add('show');
  }

  function showError(message) {
    const errorMessage = document.getElementById('errorMessage');
    const errorDiv = document.getElementById('error');
    if (errorMessage) errorMessage.textContent = message;
    if (errorDiv) errorDiv.classList.add('show');
  }

  function hideError() {
    const errorDiv = document.getElementById('error');
    if (errorDiv) errorDiv.classList.remove('show');
  }

  // Multiple initialization methods to handle different loading scenarios
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initializeCalculator);
  } else {
    // DOM is already loaded
    initializeCalculator();
  }

  // Also try after a small delay for navigation cases
  setTimeout(initializeCalculator, 50);

  // Additional fallback for Astro navigation
  document.addEventListener('astro:page-load', initializeCalculator);
</script>