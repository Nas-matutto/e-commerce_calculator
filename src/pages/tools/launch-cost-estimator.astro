---
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'E-commerce Launch Cost Estimator - Budget Calculator',
  description: 'Calculate estimated costs for launching your e-commerce brand. Get cost breakdowns for product sourcing, inventory, marketing, and total launch costs.',
  keywords: 'e-commerce launch cost, startup cost calculator, business launch budget, e-commerce cost estimator',
  canonical: 'https://www.sellingwithnas.com/tools/launch-cost-estimator',
};
---

<Layout metadata={metadata}>
  <div class="calculator-container">
    <div class="header">
      <h1>E-commerce Brand Launch Cost Estimator</h1>
      <p>Calculate estimated costs for launching your e-commerce brand</p>
    </div>
    
    <div class="calculator-grid">
      <!-- Input Section -->
      <div class="input-card">
        <h2>Product Information</h2>
        
        <div class="form-group">
          <label for="productType">Product Category</label>
          <select id="productType" class="form-control">
            <option value="">Select a category</option>
            <option value="electronics">Electronics & Tech</option>
            <option value="fashion">Fashion & Apparel</option>
            <option value="beauty">Beauty & Skincare</option>
            <option value="fitness">Fitness & Sports</option>
            <option value="home">Home & Garden</option>
            <option value="jewelry">Jewelry & Accessories</option>
            <option value="books">Books & Media</option>
            <option value="toys">Toys & Games</option>
            <option value="food">Food & Beverages</option>
            <option value="other">Other</option>
          </select>
        </div>
        
        <div class="form-group">
          <label for="targetPrice">Target Product Price ($)</label>
          <input type="number" id="targetPrice" class="form-control" placeholder="e.g., 29" min="5" max="500">
        </div>
        
        <div class="form-group">
          <label for="businessScale">Launch Strategy</label>
          <select id="businessScale" class="form-control">
            <option value="small">Conservative Start ($3K-8K)</option>
            <option value="medium">Balanced Growth ($5K-15K)</option>
            <option value="large">Aggressive Launch ($8K-25K)</option>
          </select>
        </div>
        
        <button class="calculate-btn" id="analyze-button">
          Calculate Launch Costs
        </button>
        
        <div class="loading-state" id="loading">
          <div class="spinner"></div>
          <p>Calculating your launch costs...</p>
        </div>
        
        <div class="error-message" id="error">
          <p id="errorMessage"></p>
        </div>
      </div>
      
      <!-- Results Section -->
      <div class="results-card">
        <h2>Launch Cost Analysis</h2>
        
        <div class="results-content" id="results">
          <!-- Summary Cards -->
          <div class="summary-grid" id="summaryGrid">
            <!-- Summary stats will be populated here -->
          </div>
          
          <!-- Cost Breakdown Table -->
          <div class="cost-breakdown-section">
            <h3>Cost Breakdown</h3>
            <div class="cost-table-container" id="costTableContainer">
              <!-- Cost table will be populated here -->
            </div>
          </div>
          
          <!-- Total Investment -->
          <div class="total-section" id="totalSection">
            <!-- Total investment will be populated here -->
          </div>
          
          <!-- Considerations -->
          <div class="considerations-section">
            <h3>Key Considerations</h3>
            <div id="considerationsContent">
              <!-- Considerations will be populated here -->
            </div>
          </div>
        </div>
        
        <div class="placeholder-content" id="placeholder">
          <div class="placeholder-icon">üìä</div>
          <h3>Ready to Calculate</h3>
          <p>Enter your product details on the left to see detailed cost estimates for launching your e-commerce brand</p>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  body {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', sans-serif;
    background-color: #f8fafc;
    color: #1e293b;
  }

  .calculator-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 20px;
  }

  .header {
    text-align: center;
    margin-bottom: 40px;
    padding: 40px 0;
  }

  .header h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 12px;
  }

  .header p {
    font-size: 1.2rem;
    color: #64748b;
    font-weight: 400;
  }

  .calculator-grid {
    display: grid;
    grid-template-columns: 400px 1fr;
    gap: 30px;
    align-items: start;
  }

  /* Input Card Styles */
  .input-card {
    background: white;
    border-radius: 16px;
    padding: 32px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    border: 1px solid #e2e8f0;
    position: sticky;
    top: 20px;
  }

  .input-card h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 24px;
  }

  .form-group {
    margin-bottom: 20px;
  }

  .form-group label {
    display: block;
    font-weight: 500;
    color: #374151;
    margin-bottom: 8px;
    font-size: 0.95rem;
  }

  .form-control {
    width: 100%;
    padding: 12px 16px;
    border: 2px solid #e2e8f0;
    border-radius: 8px;
    font-size: 1rem;
    transition: all 0.2s ease;
    background: white;
  }

  .form-control:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }

  .calculate-btn {
    width: 100%;
    padding: 14px 20px;
    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1rem;
    font-weight: 600;
    cursor: pointer;
    transition: all 0.2s ease;
    margin-top: 8px;
  }

  .calculate-btn:hover {
    transform: translateY(-1px);
    box-shadow: 0 8px 25px rgba(59, 130, 246, 0.3);
  }

  .calculate-btn:disabled {
    background: #9ca3af;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  /* Results Card Styles */
  .results-card {
    background: white;
    border-radius: 16px;
    padding: 32px;
    box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);
    border: 1px solid #e2e8f0;
    min-height: 600px;
  }

  .results-card h2 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 24px;
  }

  .results-content {
    display: none;
  }

  .results-content.show {
    display: block;
  }

  /* Summary Grid */
  .summary-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(160px, 1fr));
    gap: 16px;
    margin-bottom: 32px;
  }

  .summary-card {
    background: #f8fafc;
    border: 2px solid #e2e8f0;
    border-radius: 12px;
    padding: 20px;
    text-align: center;
  }

  .summary-value {
    font-size: 1.8rem;
    font-weight: 700;
    color: #1e293b;
    margin-bottom: 4px;
  }

  .summary-label {
    font-size: 0.85rem;
    color: #64748b;
    font-weight: 500;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  /* Cost Breakdown */
  .cost-breakdown-section {
    margin-bottom: 32px;
  }

  .cost-breakdown-section h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 16px;
  }

  .cost-table {
    width: 100%;
    border-collapse: collapse;
    border: 1px solid #e2e8f0;
    border-radius: 8px;
    overflow: hidden;
  }

  .cost-table th {
    background: #f8fafc;
    padding: 16px;
    text-align: left;
    font-weight: 600;
    color: #374151;
    font-size: 0.9rem;
    border-bottom: 1px solid #e2e8f0;
  }

  .cost-table th:last-child {
    text-align: right;
  }

  .cost-table td {
    padding: 16px;
    border-bottom: 1px solid #f1f5f9;
    font-size: 0.95rem;
  }

  .cost-table tbody tr:last-child td {
    border-bottom: none;
  }

  .cost-table tbody tr:hover {
    background-color: #f8fafc;
  }

  .cost-category {
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 2px;
  }

  .cost-description {
    font-size: 0.85rem;
    color: #64748b;
  }

  .cost-range {
    text-align: right;
    font-weight: 600;
    color: #1e293b;
  }

  /* Total Section */
  .total-section {
    background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%);
    border-radius: 12px;
    padding: 24px;
    color: white;
    text-align: center;
    margin-bottom: 32px;
  }

  .total-title {
    font-size: 1rem;
    font-weight: 600;
    opacity: 0.9;
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .total-amount {
    font-size: 2.2rem;
    font-weight: 900;
    margin-bottom: 8px;
  }

  .total-subtitle {
    font-size: 0.95rem;
    opacity: 0.8;
  }

  /* Considerations */
  .considerations-section h3 {
    font-size: 1.25rem;
    font-weight: 600;
    color: #1e293b;
    margin-bottom: 16px;
  }

  .considerations-list {
    background: #fef3c7;
    border: 1px solid #f59e0b;
    border-radius: 8px;
    padding: 20px;
  }

  .considerations-list ul {
    list-style: none;
    margin: 0;
    padding: 0;
  }

  .considerations-list li {
    position: relative;
    padding-left: 24px;
    margin-bottom: 12px;
    color: #92400e;
    font-size: 0.95rem;
    line-height: 1.5;
  }

  .considerations-list li:before {
    content: "‚ö†Ô∏è";
    position: absolute;
    left: 0;
    top: 0;
  }

  .considerations-list li:last-child {
    margin-bottom: 0;
  }

  /* Placeholder */
  .placeholder-content {
    text-align: center;
    padding: 60px 20px;
    color: #64748b;
  }

  .placeholder-icon {
    font-size: 3rem;
    margin-bottom: 16px;
  }

  .placeholder-content h3 {
    font-size: 1.5rem;
    font-weight: 600;
    color: #374151;
    margin-bottom: 8px;
  }

  .placeholder-content p {
    font-size: 1rem;
    line-height: 1.6;
  }

  .placeholder-content.hide {
    display: none;
  }

  /* Loading and Error States */
  .loading-state {
    display: none;
    text-align: center;
    color: #3b82f6;
    margin-top: 20px;
  }

  .loading-state.show {
    display: block;
  }

  .spinner {
    border: 3px solid #e2e8f0;
    border-top: 3px solid #3b82f6;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    animation: spin 1s linear infinite;
    margin: 0 auto 10px;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .error-message {
    background: #fef2f2;
    border: 1px solid #fca5a5;
    color: #dc2626;
    padding: 12px 16px;
    border-radius: 8px;
    margin-top: 16px;
    display: none;
    font-size: 0.9rem;
  }

  .error-message.show {
    display: block;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .calculator-grid {
      grid-template-columns: 1fr;
      gap: 20px;
    }

    .input-card {
      position: static;
    }

    .header h1 {
      font-size: 2rem;
    }

    .calculator-container {
      padding: 15px;
    }

    .summary-grid {
      grid-template-columns: repeat(2, 1fr);
    }

    .total-amount {
      font-size: 1.8rem;
    }
  }

  @media (max-width: 480px) {
    .input-card,
    .results-card {
      padding: 24px;
    }

    .summary-grid {
      grid-template-columns: 1fr;
    }

    .cost-table th,
    .cost-table td {
      padding: 12px 8px;
      font-size: 0.85rem;
    }
  }
</style>

<script>
  console.log('üöÄ Launch cost estimator script starting...');

  // Cost calculation logic - REALISTIC industry data
  const costData = {
    electronics: {
      sourcing: [800, 2500],
      inventory: [2000, 8000],
      shipping: [300, 800],
      platform: [500, 1500],
      marketing: [1500, 5000],
      legal: [200, 800],
      working: [1000, 3000],
      considerations: [
        "Electronics need safety certifications ($200-800)",
        "Higher import duties (15-25%) from overseas",
        "Plan for 15-20% return rate",
        "Competition requires strong advertising budget"
      ]
    },
    fashion: {
      sourcing: [400, 1500],
      inventory: [1500, 6000],
      shipping: [200, 600],
      platform: [300, 1200],
      marketing: [1000, 4000],
      legal: [150, 500],
      working: [800, 2500],
      considerations: [
        "Fashion has 25-35% return rates",
        "Seasonal inventory planning critical",
        "Instagram/TikTok marketing essential",
        "Size guides reduce returns significantly"
      ]
    },
    beauty: {
      sourcing: [600, 2000],
      inventory: [1800, 7000],
      shipping: [250, 700],
      platform: [400, 1300],
      marketing: [2000, 6000],
      legal: [300, 1000],
      working: [900, 2800],
      considerations: [
        "FDA compliance required for skincare",
        "Influencer marketing drives 60% of sales",
        "Before/after content converts best",
        "Expiration dates affect inventory management"
      ]
    },
    fitness: {
      sourcing: [500, 1800],
      inventory: [1600, 5500],
      shipping: [250, 650],
      platform: [350, 1100],
      marketing: [1200, 4200],
      legal: [150, 600],
      working: [750, 2400],
      considerations: [
        "New Year demand spike (3x normal)",
        "Video demonstrations boost sales 40%",
        "Fitness influencer partnerships work well",
        "Equipment weight affects shipping costs"
      ]
    },
    home: {
      sourcing: [700, 2200],
      inventory: [2000, 7500],
      shipping: [400, 1000],
      platform: [400, 1200],
      marketing: [1000, 3500],
      legal: [200, 700],
      working: [800, 2600],
      considerations: [
        "Room staging photos increase sales 25%",
        "Seasonal trends affect demand",
        "Larger items = higher shipping costs",
        "Home improvement seasons boost sales"
      ]
    },
    jewelry: {
      sourcing: [800, 3000],
      inventory: [2500, 10000],
      shipping: [150, 400],
      platform: [500, 1500],
      marketing: [1800, 5500],
      legal: [300, 1200],
      working: [1200, 4000],
      considerations: [
        "High-value shipping insurance required",
        "Professional photography essential",
        "Holiday seasons drive 40% of sales",
        "Authentication builds customer trust"
      ]
    },
    books: {
      sourcing: [300, 1000],
      inventory: [800, 3000],
      shipping: [150, 400],
      platform: [250, 800],
      marketing: [600, 2000],
      legal: [100, 400],
      working: [400, 1200],
      considerations: [
        "Print-on-demand reduces inventory risk",
        "Amazon dominates - differentiation key",
        "Educational content marketing works",
        "Low margins require volume sales"
      ]
    },
    toys: {
      sourcing: [600, 2000],
      inventory: [1500, 6000],
      shipping: [250, 700],
      platform: [350, 1000],
      marketing: [1200, 4000],
      legal: [200, 800],
      working: [700, 2300],
      considerations: [
        "Safety testing required for children's toys",
        "Holiday season drives 50% of sales",
        "Parent review content crucial",
        "Age-appropriate marketing regulations"
      ]
    },
    food: {
      sourcing: [800, 2500],
      inventory: [1200, 4500],
      shipping: [300, 800],
      platform: [400, 1200],
      marketing: [1500, 4500],
      legal: [400, 1500],
      working: [900, 2800],
      considerations: [
        "FDA regulations and nutritional labeling",
        "Expiration dates limit inventory time",
        "Cold chain shipping increases costs",
        "Subscription model reduces acquisition cost"
      ]
    }
  };

  // Default costs for other categories
  const defaultCosts = {
    sourcing: [500, 1800],
    inventory: [1500, 5500],
    shipping: [250, 650],
    platform: [350, 1100],
    marketing: [1000, 3500],
    legal: [150, 600],
    working: [700, 2200],
    considerations: [
      "Research your category's specific regulations",
      "Start small and scale based on demand",
      "Customer service quality drives repeat sales",
      "Plan for seasonal demand changes"
    ]
  };

  document.addEventListener('DOMContentLoaded', function() {
    console.log('üéØ DOM loaded, setting up event listener');
    
    const analyzeBtn = document.getElementById('analyze-button');
    console.log('Button found:', !!analyzeBtn);
    
    if (analyzeBtn) {
      analyzeBtn.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('üéâ Button clicked!');
        calculateCosts();
      });
    } else {
      console.error('‚ùå Analyze button not found');
    }
  });

  function calculateCosts() {
    console.log('üìä Calculate costs function called');
    
    const productType = document.getElementById('productType').value;
    const targetPrice = parseInt(document.getElementById('targetPrice').value) || 29;
    const businessScale = document.getElementById('businessScale').value;

    console.log('Form values:', { productType, targetPrice, businessScale });

    if (!productType) {
      showError('Please select a product category');
      return;
    }

    // Show loading
    showLoading();
    hideError();

    // Simulate calculation delay
    setTimeout(() => {
      const costs = costData[productType] || defaultCosts;
      
      // Adjust costs based on business scale
      const scaleMultiplier = businessScale === 'small' ? 0.7 : businessScale === 'large' ? 1.3 : 1;
      
      // Adjust costs based on target price
      const priceMultiplier = targetPrice < 25 ? 0.8 : targetPrice > 100 ? 1.2 : 1;
      
      const finalMultiplier = scaleMultiplier * priceMultiplier;

      const finalCosts = {
        sourcing: [Math.round(costs.sourcing[0] * finalMultiplier), Math.round(costs.sourcing[1] * finalMultiplier)],
        inventory: [Math.round(costs.inventory[0] * finalMultiplier), Math.round(costs.inventory[1] * finalMultiplier)],
        shipping: [Math.round(costs.shipping[0] * finalMultiplier), Math.round(costs.shipping[1] * finalMultiplier)],
        platform: [Math.round(costs.platform[0] * finalMultiplier), Math.round(costs.platform[1] * finalMultiplier)],
        marketing: [Math.round(costs.marketing[0] * finalMultiplier), Math.round(costs.marketing[1] * finalMultiplier)],
        legal: [Math.round(costs.legal[0] * finalMultiplier), Math.round(costs.legal[1] * finalMultiplier)],
        working: [Math.round(costs.working[0] * finalMultiplier), Math.round(costs.working[1] * finalMultiplier)]
      };

      displayResults(finalCosts, costs.considerations, productType, targetPrice, businessScale);
      hideLoading();
      showResults();
    }, 2000);
  }

  function displayResults(costs, considerations, productType, targetPrice, businessScale) {
    console.log('üé® Displaying results');
    
    // Hide placeholder
    const placeholder = document.getElementById('placeholder');
    if (placeholder) placeholder.classList.add('hide');

    // Calculate total
    const totalMin = costs.sourcing[0] + costs.inventory[0] + costs.shipping[0] + costs.platform[0] + costs.marketing[0] + costs.legal[0] + costs.working[0];
    const totalMax = costs.sourcing[1] + costs.inventory[1] + costs.shipping[1] + costs.platform[1] + costs.marketing[1] + costs.legal[1] + costs.working[1];

    // Create summary cards
    const summaryHTML = `
      <div class="summary-card">
        <div class="summary-value">$${totalMin.toLocaleString()}</div>
        <div class="summary-label">Minimum Budget</div>
      </div>
      <div class="summary-card">
        <div class="summary-value">$${totalMax.toLocaleString()}</div>
        <div class="summary-label">Recommended Budget</div>
      </div>
      <div class="summary-card">
        <div class="summary-value">${Math.round((costs.marketing[0] + costs.marketing[1]) / 2 / ((totalMin + totalMax) / 2) * 100)}%</div>
        <div class="summary-label">Marketing %</div>
      </div>
      <div class="summary-card">
        <div class="summary-value">${Math.round(((totalMin + totalMax) / 2) / targetPrice)}</div>
        <div class="summary-label">Break Even Units</div>
      </div>
    `;

    const summaryGrid = document.getElementById('summaryGrid');
    if (summaryGrid) summaryGrid.innerHTML = summaryHTML;

    // Create cost breakdown table
    const costTableHTML = `
      <table class="cost-table">
        <thead>
          <tr>
            <th>Cost Category</th>
            <th>Estimated Range</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <div class="cost-category">Product Development & Sourcing</div>
              <div class="cost-description">Initial product development, supplier negotiations, samples</div>
            </td>
            <td class="cost-range">$${costs.sourcing[0].toLocaleString()} - $${costs.sourcing[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Initial Inventory</div>
              <div class="cost-description">First production run, minimum order quantities</div>
            </td>
            <td class="cost-range">$${costs.inventory[0].toLocaleString()} - $${costs.inventory[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Shipping & Import Duties</div>
              <div class="cost-description">International shipping, customs, warehousing</div>
            </td>
            <td class="cost-range">$${costs.shipping[0].toLocaleString()} - $${costs.shipping[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Website & Platform Setup</div>
              <div class="cost-description">E-commerce platform, design, payment processing</div>
            </td>
            <td class="cost-range">$${costs.platform[0].toLocaleString()} - $${costs.platform[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Marketing & Advertising</div>
              <div class="cost-description">Paid ads, content creation, influencer partnerships</div>
            </td>
            <td class="cost-range">$${costs.marketing[0].toLocaleString()} - $${costs.marketing[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Legal & Compliance</div>
              <div class="cost-description">Business registration, trademarks, insurance</div>
            </td>
            <td class="cost-range">$${costs.legal[0].toLocaleString()} - $${costs.legal[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Working Capital</div>
              <div class="cost-description">Cash buffer for operations, unexpected costs</div>
            </td>
            <td class="cost-range">$${costs.working[0].toLocaleString()} - $${costs.working[1].toLocaleString()}</td>
          </tr>
        </tbody>
      </table>
    `;

    const costTableContainer = document.getElementById('costTableContainer');
    if (costTableContainer) costTableContainer.innerHTML = costTableHTML;

    // Create total section
    const totalHTML = `
      <div class="total-title">Total Launch Investment</div>
      <div class="total-amount">$${totalMin.toLocaleString()} - $${totalMax.toLocaleString()}</div>
      <div class="total-subtitle">Complete budget for ${businessScale} scale launch</div>
    `;

    const totalSection = document.getElementById('totalSection');
    if (totalSection) totalSection.innerHTML = totalHTML;

    // Display considerations
    let considerationsHTML = '<div class="considerations-list"><ul>';
    considerations.forEach(consideration => {
      considerationsHTML += `<li>${consideration}</li>`;
    });
    considerationsHTML += '</ul></div>';
    
    const considerationsContainer = document.getElementById('considerationsContent');
    if (considerationsContainer) considerationsContainer.innerHTML = considerationsHTML;
  }

  function showLoading() {
    const loading = document.getElementById('loading');
    if (loading) loading.classList.add('show');
  }

  function hideLoading() {
    const loading = document.getElementById('loading');
    if (loading) loading.classList.remove('show');
  }

  function showResults() {
    const results = document.getElementById('results');
    if (results) results.classList.add('show');
  }

  function showError(message) {
    const errorMessage = document.getElementById('errorMessage');
    const errorDiv = document.getElementById('error');
    if (errorMessage) errorMessage.textContent = message;
    if (errorDiv) errorDiv.classList.add('show');
  }

  function hideError() {
    const errorDiv = document.getElementById('error');
    if (errorDiv) errorDiv.classList.remove('show');
  }
</script>