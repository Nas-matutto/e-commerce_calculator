---
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'E-commerce Launch Cost Estimator - Budget Calculator',
  description: 'Calculate estimated costs for launching your e-commerce brand. Get cost breakdowns for product sourcing, inventory, marketing, and total launch costs.',
  keywords: 'e-commerce launch cost, startup cost calculator, business launch budget, e-commerce cost estimator',
  canonical: 'https://www.sellingwithnas.com/tools/launch-cost-estimator',
};
---

<Layout metadata={metadata}>
  <div class="container">
    <div class="header">
      <h1>E-commerce Brand Launch Cost Estimator</h1>
      <p>Get realistic cost estimates for launching your e-commerce brand</p>
    </div>
    
    <div class="main-content">
      <div class="input-section">
        <h2 class="section-title">Product Information</h2>
        
        <div class="input-group">
          <label for="productType">Product Category</label>
          <select id="productType">
            <option value="">Select a category</option>
            <option value="electronics">Electronics & Tech</option>
            <option value="fashion">Fashion & Apparel</option>
            <option value="beauty">Beauty & Skincare</option>
            <option value="fitness">Fitness & Sports</option>
            <option value="home">Home & Garden</option>
            <option value="jewelry">Jewelry & Accessories</option>
            <option value="books">Books & Media</option>
            <option value="toys">Toys & Games</option>
            <option value="food">Food & Beverages</option>
            <option value="other">Other</option>
          </select>
        </div>
        
        <div class="input-group">
          <label for="targetPrice">Target Product Price ($)</label>
          <input type="number" id="targetPrice" placeholder="e.g., 29" min="5" max="500">
        </div>
        
        <div class="input-group">
          <label for="businessScale">Launch Strategy</label>
          <select id="businessScale">
            <option value="small">Conservative Start ($3K-8K)</option>
            <option value="medium">Balanced Growth ($5K-15K)</option>
            <option value="large">Aggressive Launch ($8K-25K)</option>
          </select>
        </div>
        
        <button class="analyze-btn" id="analyze-button">
          Calculate Launch Costs
        </button>
        
        <div class="loading" id="loading">
          <div class="spinner"></div>
          <p>Calculating your launch costs...</p>
        </div>
        
        <div class="error" id="error">
          <p id="errorMessage"></p>
        </div>
      </div>
      
      <div class="results-section">
        <h2 class="section-title">Cost Analysis</h2>
        
        <div class="results" id="results">
          <div class="analysis-box">
            <h3>Launch Cost Analysis</h3>
            <p id="analysisRationale">
              Your estimated launch costs are based on your product category, target price point, and business scale. These ranges reflect current market conditions and typical startup requirements.
            </p>
          </div>
          
          <div class="cost-breakdown">
            <h3>Estimated Launch Costs</h3>
            <div id="costItems">
              <!-- Results will be populated here -->
            </div>
          </div>
          
          <div class="considerations">
            <h3>Key Considerations</h3>
            <div id="considerationsContent">
              <!-- Considerations will be populated here -->
            </div>
          </div>
        </div>
        
        <div class="placeholder" id="placeholder">
          <p>Select your product details on the left to see cost estimates</p>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }

  .container {
    max-width: 1200px;
    margin: 40px auto;
    background: white;
    border-radius: 20px;
    box-shadow: 0 20px 40px rgba(0,0,0,0.1);
    overflow: hidden;
  }

  .header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 40px;
    text-align: center;
  }

  .header h1 {
    font-size: 2.5rem;
    margin-bottom: 10px;
    font-weight: 700;
  }

  .header p {
    font-size: 1.1rem;
    opacity: 0.9;
  }

  .main-content {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 0;
    min-height: 600px;
  }

  .input-section {
    padding: 40px;
    background: #f8f9fa;
    border-right: 1px solid #e9ecef;
  }

  .results-section {
    padding: 40px;
    background: white;
  }

  .section-title {
    font-size: 1.5rem;
    font-weight: 600;
    margin-bottom: 30px;
    color: #2c3e50;
  }

  .input-group {
    margin-bottom: 25px;
  }

  .input-group label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: #2c3e50;
  }

  .input-group input, .input-group select {
    width: 100%;
    padding: 15px;
    border: 2px solid #e9ecef;
    border-radius: 8px;
    font-size: 1rem;
    transition: border-color 0.3s ease;
    background: white;
  }

  .input-group input:focus, .input-group select:focus {
    outline: none;
    border-color: #667eea;
  }

  .analyze-btn {
    width: 100%;
    padding: 15px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border: none;
    border-radius: 8px;
    font-size: 1.1rem;
    font-weight: 600;
    cursor: pointer;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .analyze-btn:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(102, 126, 234, 0.3);
  }

  .analyze-btn:disabled {
    background: #6c757d;
    cursor: not-allowed;
    transform: none;
    box-shadow: none;
  }

  .loading {
    display: none;
    text-align: center;
    color: #667eea;
    margin-top: 20px;
  }

  .loading.show {
    display: block;
  }

  .spinner {
    border: 3px solid #f3f3f3;
    border-top: 3px solid #667eea;
    border-radius: 50%;
    width: 30px;
    height: 30px;
    animation: spin 1s linear infinite;
    margin: 0 auto 10px;
  }

  @keyframes spin {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }

  .results {
    display: none;
  }

  .results.show {
    display: block;
  }

  .placeholder {
    text-align: center;
    color: #6c757d;
    margin-top: 30px;
  }

  .placeholder.hide {
    display: none;
  }

  .analysis-box {
    background: linear-gradient(135deg, #e8f4fd 0%, #d1ecf1 100%);
    border-radius: 16px;
    padding: 25px;
    margin-bottom: 30px;
    border-left: 5px solid #667eea;
    box-shadow: 0 4px 12px rgba(102, 126, 234, 0.1);
  }

  .analysis-box h3 {
    color: #2c3e50;
    margin-bottom: 12px;
    font-size: 1.3rem;
    font-weight: 600;
  }

  .analysis-box p {
    color: #2c3e50;
    line-height: 1.6;
    font-size: 1rem;
  }

  .summary-stats {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(140px, 1fr));
    gap: 15px;
    margin-bottom: 25px;
  }

  .stat-card {
    background: white;
    padding: 20px;
    border-radius: 12px;
    text-align: center;
    box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    border: 1px solid #e9ecef;
  }

  .stat-number {
    font-size: 1.8rem;
    font-weight: 700;
    color: #667eea;
    margin-bottom: 5px;
  }

  .stat-label {
    font-size: 0.9rem;
    color: #6c757d;
    font-weight: 500;
  }

  .cost-breakdown {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    border-radius: 16px;
    padding: 30px;
    margin-bottom: 30px;
    border: 1px solid #dee2e6;
  }

  .cost-breakdown h3 {
    margin-bottom: 25px;
    color: #2c3e50;
    font-size: 1.3rem;
    text-align: center;
  }

  /* NEW TABLE STYLES */
  .cost-table {
    width: 100%;
    border-collapse: collapse;
    background: white;
    border-radius: 12px;
    overflow: hidden;
    box-shadow: 0 4px 15px rgba(0,0,0,0.08);
    margin-bottom: 25px;
  }

  .cost-table thead {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
  }

  .cost-table th {
    padding: 18px 15px;
    text-align: left;
    font-weight: 600;
    font-size: 0.95rem;
    letter-spacing: 0.5px;
  }

  .cost-table th:first-child {
    border-radius: 12px 0 0 0;
  }

  .cost-table th:last-child {
    border-radius: 0 12px 0 0;
    text-align: right;
  }

  .cost-table td {
    padding: 16px 15px;
    border-bottom: 1px solid #e9ecef;
    font-size: 0.95rem;
  }

  .cost-table tbody tr:hover {
    background-color: #f8f9fa;
    transform: scale(1.01);
    transition: all 0.2s ease;
  }

  .cost-table tbody tr:last-child td {
    border-bottom: none;
  }

  .cost-category {
    font-weight: 600;
    color: #2c3e50;
  }

  .cost-range {
    text-align: right;
    font-weight: 600;
    color: #667eea;
    font-size: 1rem;
  }

  .cost-description {
    font-size: 0.85rem;
    color: #6c757d;
    margin-top: 2px;
  }

  /* ENHANCED TOTAL INVESTMENT BANNER */
  .total-investment-banner {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    border-radius: 20px;
    padding: 40px;
    text-align: center;
    box-shadow: 0 15px 35px rgba(102, 126, 234, 0.3);
    margin-top: 20px;
    position: relative;
    overflow: hidden;
  }

  .total-investment-banner::before {
    content: '';
    position: absolute;
    top: -50%;
    left: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 70%);
    animation: shimmer 3s ease-in-out infinite;
  }

  @keyframes shimmer {
    0%, 100% { transform: rotate(0deg); }
    50% { transform: rotate(180deg); }
  }

  .total-investment-title {
    font-size: 1.2rem;
    font-weight: 600;
    margin-bottom: 15px;
    opacity: 0.95;
    letter-spacing: 1px;
    text-transform: uppercase;
    position: relative;
    z-index: 1;
  }

  .total-investment-amount {
    font-size: 3rem;
    font-weight: 900;
    margin-bottom: 12px;
    text-shadow: 0 4px 8px rgba(0,0,0,0.2);
    line-height: 1;
    position: relative;
    z-index: 1;
    background: linear-gradient(45deg, #ffffff, #f0f0f0);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .total-investment-subtitle {
    font-size: 1.1rem;
    opacity: 0.9;
    font-weight: 400;
    position: relative;
    z-index: 1;
  }

  .total-range-breakdown {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 20px;
    margin-top: 25px;
    position: relative;
    z-index: 1;
  }

  .range-item {
    background: rgba(255, 255, 255, 0.15);
    padding: 20px;
    border-radius: 12px;
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }

  .range-label {
    font-size: 0.9rem;
    opacity: 0.8;
    margin-bottom: 8px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
  }

  .range-value {
    font-size: 1.6rem;
    font-weight: 700;
    line-height: 1;
  }

  @media (max-width: 768px) {
    .cost-table th,
    .cost-table td {
      padding: 12px 10px;
      font-size: 0.9rem;
    }
    
    .total-investment-amount {
      font-size: 2.2rem;
    }
    
    .total-investment-banner {
      padding: 30px 20px;
    }

    .total-range-breakdown {
      grid-template-columns: 1fr;
      gap: 15px;
    }
  }

  @media (max-width: 480px) {
    .cost-table {
      font-size: 0.85rem;
    }
    
    .cost-breakdown {
      padding: 20px;
    }

    .total-investment-amount {
      font-size: 2rem;
    }
  }

  .considerations {
    background: #e7f3ff;
    border-left: 4px solid #667eea;
    padding: 20px;
    border-radius: 8px;
  }

  .considerations h3 {
    color: #2c3e50;
    margin-bottom: 15px;
  }

  .considerations ul {
    color: #2c3e50;
    padding-left: 20px;
    line-height: 1.6;
  }

  .considerations li {
    margin-bottom: 10px;
  }

  .error {
    background: #f8d7da;
    color: #721c24;
    padding: 15px;
    border-radius: 8px;
    margin-top: 20px;
    display: none;
  }

  .error.show {
    display: block;
  }

  @media (max-width: 768px) {
    .main-content {
      grid-template-columns: 1fr;
    }
    
    .input-section {
      border-right: none;
      border-bottom: 1px solid #e9ecef;
    }
    
    .header h1 {
      font-size: 2rem;
    }

    .container {
      margin: 20px;
    }
  }

  /* Dark mode support */
  :global(.dark) .container {
    background: #1e293b;
  }

  :global(.dark) .input-section {
    background: #0f172a;
    color: #ffffff;
  }

  :global(.dark) .results-section {
    background: #1e293b;
    color: #ffffff;
  }

  :global(.dark) .section-title {
    color: #ffffff;
  }

  :global(.dark) .input-group label {
    color: #e0e0e0;
  }

  :global(.dark) .input-group input,
  :global(.dark) .input-group select {
    background: #374151;
    border-color: #4b5563;
    color: #ffffff;
  }

  :global(.dark) .cost-breakdown {
    background: #374151;
  }

  :global(.dark) .cost-table {
    background: #374151;
  }

  :global(.dark) .cost-table td {
    border-bottom-color: #4b5563;
  }

  :global(.dark) .cost-category {
    color: #ffffff;
  }

  :global(.dark) .analysis-box {
    background: #1e3a8a;
    color: #ffffff;
  }

  :global(.dark) .analysis-box h3,
  :global(.dark) .analysis-box p {
    color: #ffffff;
  }

  :global(.dark) .considerations {
    background: #1e3a8a;
    color: #ffffff;
  }

  :global(.dark) .considerations h3,
  :global(.dark) .considerations li {
    color: #ffffff;
  }
</style>

<script>
  console.log('🚀 Launch cost estimator script starting...');

  // Cost calculation logic - REALISTIC industry data
  const costData = {
    electronics: {
      sourcing: [800, 2500],
      inventory: [2000, 8000],
      shipping: [300, 800],
      platform: [500, 1500],
      marketing: [1500, 5000],
      legal: [200, 800],
      working: [1000, 3000],
      considerations: [
        "Electronics need safety certifications ($200-800)",
        "Higher import duties (15-25%) from overseas",
        "Plan for 15-20% return rate",
        "Competition requires strong advertising budget"
      ]
    },
    fashion: {
      sourcing: [400, 1500],
      inventory: [1500, 6000],
      shipping: [200, 600],
      platform: [300, 1200],
      marketing: [1000, 4000],
      legal: [150, 500],
      working: [800, 2500],
      considerations: [
        "Fashion has 25-35% return rates",
        "Seasonal inventory planning critical",
        "Instagram/TikTok marketing essential",
        "Size guides reduce returns significantly"
      ]
    },
    beauty: {
      sourcing: [600, 2000],
      inventory: [1800, 7000],
      shipping: [250, 700],
      platform: [400, 1300],
      marketing: [2000, 6000],
      legal: [300, 1000],
      working: [900, 2800],
      considerations: [
        "FDA compliance required for skincare",
        "Influencer marketing drives 60% of sales",
        "Before/after content converts best",
        "Expiration dates affect inventory management"
      ]
    },
    fitness: {
      sourcing: [500, 1800],
      inventory: [1600, 5500],
      shipping: [250, 650],
      platform: [350, 1100],
      marketing: [1200, 4200],
      legal: [150, 600],
      working: [750, 2400],
      considerations: [
        "New Year demand spike (3x normal)",
        "Video demonstrations boost sales 40%",
        "Fitness influencer partnerships work well",
        "Equipment weight affects shipping costs"
      ]
    },
    home: {
      sourcing: [700, 2200],
      inventory: [2000, 7500],
      shipping: [400, 1000],
      platform: [400, 1200],
      marketing: [1000, 3500],
      legal: [200, 700],
      working: [800, 2600],
      considerations: [
        "Room staging photos increase sales 25%",
        "Seasonal trends affect demand",
        "Larger items = higher shipping costs",
        "Home improvement seasons boost sales"
      ]
    },
    jewelry: {
      sourcing: [800, 3000],
      inventory: [2500, 10000],
      shipping: [150, 400],
      platform: [500, 1500],
      marketing: [1800, 5500],
      legal: [300, 1200],
      working: [1200, 4000],
      considerations: [
        "High-value shipping insurance required",
        "Professional photography essential",
        "Holiday seasons drive 40% of sales",
        "Authentication builds customer trust"
      ]
    },
    books: {
      sourcing: [300, 1000],
      inventory: [800, 3000],
      shipping: [150, 400],
      platform: [250, 800],
      marketing: [600, 2000],
      legal: [100, 400],
      working: [400, 1200],
      considerations: [
        "Print-on-demand reduces inventory risk",
        "Amazon dominates - differentiation key",
        "Educational content marketing works",
        "Low margins require volume sales"
      ]
    },
    toys: {
      sourcing: [600, 2000],
      inventory: [1500, 6000],
      shipping: [250, 700],
      platform: [350, 1000],
      marketing: [1200, 4000],
      legal: [200, 800],
      working: [700, 2300],
      considerations: [
        "Safety testing required for children's toys",
        "Holiday season drives 50% of sales",
        "Parent review content crucial",
        "Age-appropriate marketing regulations"
      ]
    },
    food: {
      sourcing: [800, 2500],
      inventory: [1200, 4500],
      shipping: [300, 800],
      platform: [400, 1200],
      marketing: [1500, 4500],
      legal: [400, 1500],
      working: [900, 2800],
      considerations: [
        "FDA regulations and nutritional labeling",
        "Expiration dates limit inventory time",
        "Cold chain shipping increases costs",
        "Subscription model reduces acquisition cost"
      ]
    }
  };

  // Default costs for other categories
  const defaultCosts = {
    sourcing: [500, 1800],
    inventory: [1500, 5500],
    shipping: [250, 650],
    platform: [350, 1100],
    marketing: [1000, 3500],
    legal: [150, 600],
    working: [700, 2200],
    considerations: [
      "Research your category's specific regulations",
      "Start small and scale based on demand",
      "Customer service quality drives repeat sales",
      "Plan for seasonal demand changes"
    ]
  };

  document.addEventListener('DOMContentLoaded', function() {
    console.log('🎯 DOM loaded, setting up event listener');
    
    const analyzeBtn = document.getElementById('analyze-button');
    console.log('Button found:', !!analyzeBtn);
    
    if (analyzeBtn) {
      analyzeBtn.addEventListener('click', function(e) {
        e.preventDefault();
        console.log('🎉 Button clicked!');
        calculateCosts();
      });
    } else {
      console.error('❌ Analyze button not found');
    }
  });

  function calculateCosts() {
    console.log('📊 Calculate costs function called');
    
    const productType = document.getElementById('productType').value;
    const targetPrice = parseInt(document.getElementById('targetPrice').value) || 29;
    const businessScale = document.getElementById('businessScale').value;

    console.log('Form values:', { productType, targetPrice, businessScale });

    if (!productType) {
      showError('Please select a product category');
      return;
    }

    // Show loading
    showLoading();
    hideError();

    // Simulate calculation delay
    setTimeout(() => {
      const costs = costData[productType] || defaultCosts;
      
      // Adjust costs based on business scale
      const scaleMultiplier = businessScale === 'small' ? 0.7 : businessScale === 'large' ? 1.3 : 1;
      
      // Adjust costs based on target price
      const priceMultiplier = targetPrice < 25 ? 0.8 : targetPrice > 100 ? 1.2 : 1;
      
      const finalMultiplier = scaleMultiplier * priceMultiplier;

      const finalCosts = {
        sourcing: [Math.round(costs.sourcing[0] * finalMultiplier), Math.round(costs.sourcing[1] * finalMultiplier)],
        inventory: [Math.round(costs.inventory[0] * finalMultiplier), Math.round(costs.inventory[1] * finalMultiplier)],
        shipping: [Math.round(costs.shipping[0] * finalMultiplier), Math.round(costs.shipping[1] * finalMultiplier)],
        platform: [Math.round(costs.platform[0] * finalMultiplier), Math.round(costs.platform[1] * finalMultiplier)],
        marketing: [Math.round(costs.marketing[0] * finalMultiplier), Math.round(costs.marketing[1] * finalMultiplier)],
        legal: [Math.round(costs.legal[0] * finalMultiplier), Math.round(costs.legal[1] * finalMultiplier)],
        working: [Math.round(costs.working[0] * finalMultiplier), Math.round(costs.working[1] * finalMultiplier)]
      };

      displayResults(finalCosts, costs.considerations, productType, targetPrice, businessScale);
      hideLoading();
      showResults();
    }, 2000);
  }

  function displayResults(costs, considerations, productType, targetPrice, businessScale) {
    console.log('🎨 Displaying results');
    
    // Hide placeholder
    const placeholder = document.getElementById('placeholder');
    if (placeholder) placeholder.classList.add('hide');

    // Calculate total
    const totalMin = costs.sourcing[0] + costs.inventory[0] + costs.shipping[0] + costs.platform[0] + costs.marketing[0] + costs.legal[0] + costs.working[0];
    const totalMax = costs.sourcing[1] + costs.inventory[1] + costs.shipping[1] + costs.platform[1] + costs.marketing[1] + costs.legal[1] + costs.working[1];

    // Update rationale
    const rationale = `Your ${productType} business with ${businessScale} scale approach requires strategic cost planning. These estimates are based on current market data and successful launches in this category.`;
    const rationaleElement = document.getElementById('analysisRationale');
    if (rationaleElement) rationaleElement.textContent = rationale;

    // Add summary stats
    const summaryStatsHTML = `
      <div class="summary-stats">
        <div class="stat-card">
          <div class="stat-number">$${totalMin.toLocaleString()}</div>
          <div class="stat-label">Minimum Budget</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">$${totalMax.toLocaleString()}</div>
          <div class="stat-label">Recommended Budget</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">${Math.round((costs.marketing[0] + costs.marketing[1]) / 2 / ((totalMin + totalMax) / 2) * 100)}%</div>
          <div class="stat-label">Marketing Budget</div>
        </div>
        <div class="stat-card">
          <div class="stat-number">${Math.round(((totalMin + totalMax) / 2) / targetPrice)}</div>
          <div class="stat-label">Units to Break Even</div>
        </div>
      </div>
    `;

    // Create the cost breakdown table
    const costTableHTML = `
      <table class="cost-table">
        <thead>
          <tr>
            <th>Cost Category</th>
            <th>Estimated Range</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td>
              <div class="cost-category">Product Development & Sourcing</div>
              <div class="cost-description">Initial product development, supplier negotiations, samples</div>
            </td>
            <td class="cost-range">$${costs.sourcing[0].toLocaleString()} - $${costs.sourcing[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Initial Inventory</div>
              <div class="cost-description">First production run, minimum order quantities</div>
            </td>
            <td class="cost-range">$${costs.inventory[0].toLocaleString()} - $${costs.inventory[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Shipping & Import Duties</div>
              <div class="cost-description">International shipping, customs, warehousing</div>
            </td>
            <td class="cost-range">$${costs.shipping[0].toLocaleString()} - $${costs.shipping[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Website & Platform Setup</div>
              <div class="cost-description">E-commerce platform, design, payment processing</div>
            </td>
            <td class="cost-range">$${costs.platform[0].toLocaleString()} - $${costs.platform[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Marketing & Advertising</div>
              <div class="cost-description">Paid ads, content creation, influencer partnerships</div>
            </td>
            <td class="cost-range">$${costs.marketing[0].toLocaleString()} - $${costs.marketing[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Legal & Compliance</div>
              <div class="cost-description">Business registration, trademarks, insurance</div>
            </td>
            <td class="cost-range">$${costs.legal[0].toLocaleString()} - $${costs.legal[1].toLocaleString()}</td>
          </tr>
          <tr>
            <td>
              <div class="cost-category">Working Capital</div>
              <div class="cost-description">Cash buffer for operations, unexpected costs</div>
            </td>
            <td class="cost-range">$${costs.working[0].toLocaleString()} - $${costs.working[1].toLocaleString()}</td>
          </tr>
        </tbody>
      </table>
    `;

    // Enhanced total investment banner
    const totalInvestmentHTML = `
      <div class="total-investment-banner">
        <div class="total-investment-title">Total Launch Investment</div>
        <div class="total-investment-amount">$${totalMin.toLocaleString()} - $${totalMax.toLocaleString()}</div>
        <div class="total-investment-subtitle">Complete budget range for ${businessScale} scale launch</div>
        <div class="total-range-breakdown">
          <div class="range-item">
            <div class="range-label">Conservative Start</div>
            <div class="range-value">$${totalMin.toLocaleString()}</div>
          </div>
          <div class="range-item">
            <div class="range-label">Recommended Budget</div>
            <div class="range-value">$${totalMax.toLocaleString()}</div>
          </div>
        </div>
      </div>
    `;

    const costItemsHTML = `
      ${summaryStatsHTML}
      ${costTableHTML}
      ${totalInvestmentHTML}
    `;

    const costItemsContainer = document.getElementById('costItems');
    if (costItemsContainer) costItemsContainer.innerHTML = costItemsHTML;

    // Display considerations
    let considerationsHTML = '<ul>';
    considerations.forEach(consideration => {
      considerationsHTML += `<li>${consideration}</li>`;
    });
    considerationsHTML += '</ul>';
    
    const considerationsContainer = document.getElementById('considerationsContent');
    if (considerationsContainer) considerationsContainer.innerHTML = considerationsHTML;
  }

  function showLoading() {
    const loading = document.getElementById('loading');
    if (loading) loading.classList.add('show');
  }

  function hideLoading() {
    const loading = document.getElementById('loading');
    if (loading) loading.classList.remove('show');
  }

  function showResults() {
    const results = document.getElementById('results');
    if (results) results.classList.add('show');
  }

  function showError(message) {
    const errorMessage = document.getElementById('errorMessage');
    const errorDiv = document.getElementById('error');
    if (errorMessage) errorMessage.textContent = message;
    if (errorDiv) errorDiv.classList.add('show');
  }

  function hideError() {
    const errorDiv = document.getElementById('error');
    if (errorDiv) errorDiv.classList.remove('show');
  }
</script>